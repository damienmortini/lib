export default class Quaternion extends Float32Array {
    constructor(array?: number[]);
    set x(arg: any);
    get x(): any;
    0: any;
    set y(arg: any);
    get y(): any;
    1: any;
    set z(arg: any);
    get z(): any;
    2: any;
    set w(arg: any);
    get w(): any;
    3: any;
    identity(): Quaternion;
    set(x: any, y: any, z: any, w: any): Quaternion;
    rotateX(angle: any): Quaternion;
    rotateY(angle: any): Quaternion;
    rotateZ(angle: any): Quaternion;
    invert(quaternion?: Quaternion): Quaternion;
    copy(quaternion: any): Quaternion;
    slerp(quaternion: any, value: any): quat;
    normalize(quaternion?: Quaternion): Quaternion;
    multiply(quaternionA: any, quaternionB: any): Quaternion;
    fromMatrix3(matrix3: any): Quaternion;
    fromMatrix4(matrix4: any): Quaternion;
    fromAxisAngle(axis: any, angle: any): Quaternion;
    betweenVectors(vector3a: any, vector3b: any): Quaternion;
    computeW(quaternion?: Quaternion): Quaternion;
}
import { quat } from "gl-matrix";
